# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        
      - id: files
        uses: jitterbit/get-changed-files@v1
        with:
          format: 'csv'
      - run: |
          mapfile -d ',' -t added_modified_files < <(printf '%s,' '${{ steps.files.outputs.added_modified }}')
          for added_modified_file in "${added_modified_files[@]}"; do
            echo "List of all staging links:"
            #grep -h -R -l '.. include:: /includes/fact-connect-prereqs.rst' source
            foo="$(grep -HRl '.. include:: /includes/fact-connect-prereqs.rst' source) "
            echo "*** $foo"
            if [ "${added_modified_file: -4}" == ".rst" ]
            then
              grep --no-filename -R -l '.. include:: /includes/fact-connect-prereqs.rst' source
            fi
          done
          
      - name: Extract branch name
        shell: bash
        run: echo "::set-env name=BRANCH_NAME::$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')"
        env:
            ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
            
      - name: Test
        run: echo "${BRANCH_NAME}"

          
