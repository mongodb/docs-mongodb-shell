.. _mdb-shell-help:

===========================
Access the |mdb-shell| Help
===========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

``mongosh`` provides additional help information in its help system.
This document provides an overview of accessing this help
information.

.. _mdb-shell-help-command-line:

Command Line Help
-----------------

To see the list of options and help for starting ``mongosh``, use the
``--help`` option from the command line:

.. code-block:: sh

   mongosh --help

Shell Help
----------

.. include:: /includes/admonitions/help-interchangeable.rst

To see a basic list of commands you can run, in ``mongosh``, type
``help``:

.. code-block:: javascript

   help

.. _mdb-shell-help-db:

Database Help
-------------

In ``monogsh``:

- To see the list of databases on the server, use the ``show dbs``
  command:

  .. code-block:: javascript

     show dbs

  ``show databases`` is an alias for ``show dbs``.

- To see the list of help for methods you can use on the ``db``
  object, call the ``db.help()`` method or run the ``db.help`` command:

  .. include:: /includes/admonitions/help-interchangeable.rst

  .. code-block:: javascript

     db.help()

  The output resembles the following:

  .. code-block:: none
     :copyable: false

     Database Class:

       getMongo                Returns the current database connection
       getCollectionNames      Returns an array containing the names of
                               all collections in the current database.
       getCollectionInfos      Returns an array of documents with
                               collection information, i.e. collection
                               name and options, for the current
                               database.
       runCommand              Runs an arbitrary command on the
                               database. 
       adminCommand            Runs an arbitrary command against the
                               admin database. 
       aggregate               Runs a specified admin/diagnostic
                               pipeline which does not require an
                               underlying collection.
       getSiblingDB            Returns another database without
                               modifying the db variable in the shell
                               environment. 
       getCollection           Removes the current database, deleting
                               the associated data files.
       dropDatabase            Removes the current database, deleting
                               the associated data files.

- To see help for a specific database method in ``mongosh``, type the
  ``db.<method name>``, followed by ``.help`` or ``.help()``. The
  following example returns help for the :method:`db.adminCommand()`
  method:

  .. code-block:: javascript

     db.adminCommand.help()

  The output resembles the following:

  .. code-block:: none

       db.adminCommand({ serverStatus: 1 }):

       Runs an arbitrary command against the admin database.

       For more information on usage: https://docs.mongodb.com/manual/reference/method/db.adminCommand

- To see additional usage details for a database method in ``mongosh``,
  type the ``db.<method name>`` without the parenthesis (``()``). The
  following example returns details about the
  :method:`db.adminCommand()` method:

  .. code-block:: javascript

     db.adminCommand

  The output resembles the following:

  .. code-block:: javascript
     :copyable: false

     [Function] {
       serverVersions: [ '3.4.0', '4.4.0' ],
       returnsPromise: true,
       topologies: [ 0, 2, 1 ],
       returnType: { type: 'unknown', attributes: {} },
       platforms: [ 0, 1, 2 ],
       help: [Function] Help
     }


.. _mdb-shell-help-collection:

Collection Help
---------------

In ``mongosh``:

- To see the list of collections in the current database, use the
  ``show collections`` command:

  .. code-block:: javascript

     show collections
  
- To see the help for methods available on the collection objects
  (e.g. ``db.<collection>``), use the ``db.<collection>.help()``
  method:

  .. include:: /includes/admonitions/help-interchangeable.rst

  .. code-block:: javascript

     db.collection.help()

  ``<collection>`` can be the name of an existing or nonexistent
  collection.

  The output resembles the following:

  .. code-block:: none
     :copyable: false

     Collection Class:

       aggregate               Calculates aggregate values for the
                               data in a collection or a view.
       bulkWrite               Performs multiple write operations
                               with controls for order of execution.
       count                   Returns the count of documents that
                               would match a find() query for the
                               collection or view.
       countDocuments          Returns the count of documents that
                               match the query for a collection or view.
       deleteMany              Removes all documents that match the
                               filter from a collection.
       deleteOne               Removes a single document from a
                               collection. 
       distinct                Finds the distinct values for a specified
                               field across a single collection or view
                               and returns the results in an array.
       estimatedDocumentCount  Returns the count of all documents in a
                               collection or view.
       find                    Selects documents in a collection or view.
       
       ...

- To see help for a specific collection method in ``mongosh``, type the
  ``db.<collection>.<method name>``, followed by ``.help`` or
  ``.help()``. The following example returns help for the
  :method:`db.collection.insertOne()` method:

  .. include:: /includes/admonitions/help-interchangeable.rst

  .. code-block:: javascript

     db.collection.insertOne.help()

  The output resembles the following:

  .. code-block:: none
     :copyable: false

     db.collection.insertOne(document, options):

     Inserts a document into a collection.

     For more information on usage: https://docs.mongodb.com/manual/reference/method/db.collection.insertOne

- To see additional usage details for a collection method in
  ``mongosh``, type the ``db.<collection>.<method>`` name without the
  parenthesis (``()``) The following example returns
  details about the :method:`~db.collection.insertOne()` method:

  .. code-block:: javascript

     db.collection.insertOne

  The output resembles the following:

  .. code-block:: javascript
     :copyable: false

     [Function] {
       serverVersions: [ '3.2.0', '4.4.0' ],
       returnsPromise: true,
       topologies: [ 0, 2, 1 ],
       returnType: { type: 'unknown', attributes: {} },
       platforms: [ 0, 1, 2 ],
       help: [Function] Help
     }

.. didn't include the cursor details from the manual help page as
   it seems as if most of it doesn't apply for ``mongosh``
