.. _snip-create:

=============================
Working With Snippet Packages
=============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

.. warning:: Experimental feature

   .. include:: /includes/warnings/warn-experimental-feature.rst

You can :ref:`write scripts <mdb-shell-write-scripts>` to manipulate
data or carry out administrative tasks in :binary:`~bin.mongosh`.
Packaging a script as a snippet provides a way to easily share scripts
within your organization or across the MongoDB user community.

This page discusses:

- :ref:`Preparing <snip-write>` a snippet package.
- :ref:`Publishing <snip-publish>` the snippet package to a registry.

For examples of scripts and the metadata files in snippet packages,
see the snippets in the `community snippet registry 
<https://github.com/mongodb-labs/mongosh-snippets>`__ on GitHub.
 
.. tip::

   If you plan to submit your snippet to the `community registry 
   <https://github.com/mongodb-labs/mongosh-snippets>`__, be sure
   to review the information in :ref:`snip-contribute-a-package`.

.. _snip-write:

Create a Snippet Package
------------------------

The steps in this section focus on packaging a script. For more details
on writing scripts see :ref:`mdb-shell-write-scripts`.

Prepare the Files
~~~~~~~~~~~~~~~~~
#. Fork the snippets `project repository 
   <https://github.com/mongodb-labs/mongosh-snippets>`__.
#. Create a directory for your snippet package under the ``snippets``
   directory in the forked repository. This directory will
   contain the code for your script and several metadata files. 
#. Create a ``README.md``. The ``README.md`` describes how to use your
   code. This file is displayed when a user enters ``snippet help`` for
   your snippet.
#. Create a ``LICENSE`` file. You will need to enter a license
   identifier string later, so try to chose a license from the
   `SPDX license list <https://www.npmjs.com/package/spdx>`__.
#. Create an ``index.js`` file. 

   - This file contains the entry point to your code that is exposed in
     the :binary:`~bin.mongosh` console.
   - The script is written in JavaScript and defines your new functions.
   - The script can be in a single file or multiple files.
   - The script can call other files and local or remote npm modules.
     To ``require()`` a remote npm module use the construction: 

     .. code-block:: javascript

        const localRequire = require('module').createRequire(__filename);)

     For an example, see
     `index.js <https://github.com/mongodb-labs/mongosh-snippets/blob/main/snippets/resumetoken/index.js>`__
     in the ``resumetoken`` snippet.
   - ``index.js`` is referenced in :ref:`package.json <snip-prep-package.json>`. 
   - The MongoDB repository has `example code
     <https://github.com/mongodb-labs/mongosh-snippets>`__.

   .. tip::

      If you have an existing script, either rename it ``index.js`` or
      create an ``index.js`` file to load it. For an example of an
      ``index.js`` file that loads other scripts, see `this one
      <https://github.com/mongodb-labs/mongosh-snippets/blob/main/snippets/mongocompat/index.js>`__
      in the `community repository
      <https://github.com/mongodb-labs/mongosh-snippets>`__.

.. _snip-prep-package.json:

Prepare the ``package.json`` File
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

``package.json`` contains metadata that the package registry uses to
manage snippets. 

A minimal ``package.json`` file looks like this:

.. code-block:: typescript
   :copyable: false

   {
       "name": "@mongosh/snippet-resumetoken",
       "snippetName": "resumetoken",
       "version": "1.0.2",
       "description": "Resume token decoder script",
       "main": "index.js",
       "license": "Apache-2.0",
       "publishConfig": {
          "access": "public"
       }
   }

The parameters are:

.. list-table::
   :header-rows: 1
   :widths: 33 67

   * - Field
     - Description
   * - "name"
     - The package that contains the snippet.
   * - "snippetName"
     - The snippet name. This is the name used with commands like ``install``.
   * - "version"
     - The package version. This should be incremented when you update
       your snippet. 
   * - "description"
     - A brief note about what your snippet does. Caution, if the
       description is more than 50 or 60 characters long it may cause
       display problems with some
       :ref:`snippet commands <snip-commands>`.
   * - "main"
     - This is the starting point for your code, ``index.js``. Note
       that functions in other files can be scoped so that they are
       also available in the the :binary:`~bin.mongosh` shell.
   * - "license"
     - The license for users of your code. If you want to contribute to
       the shared registry, the license should be from the
       `SPDX license list <https://www.npmjs.com/package/spdx>`__. See
       also the
       `MongoDB Contributor Agreement <https://www.mongodb.com/legal/contributor-agreement>`__.
   * - "publishConfig"
     - This value is used to control access to your snippet package.
       ``public`` is typical, but npm provides
       `other options <https://docs.npmjs.com/cli/v7/using-npm/config>`__
       as well.

Use this code to create a skelton ``package.json`` file. 

.. code-block:: javascript

   {
       "name": "@UPDATE/UPDATE",
       "snippetName": "UPDATE",
       "version": "UPDATE",
       "description": "UPDATE",
       "main": "UPDATE",
       "license": "UPDATE",
       "publishConfig": {
          "access": "UPDATE"
       }
   }

Edit the file and replace each ``UPDATE`` to insert the values for your
snippet package. 

There are several examples of ``package.json`` files in the MongoDB
GitHub `repository <https://github.com/mongodb-labs/mongosh-snippets>`__.

.. tip::

   MongoDB uses npm as a package registry. 
   
   npm relies on the ``package.json`` file to manage packages. Refer to
   the `npm package documentation
   <https://docs.npmjs.com/cli/v7/configuring-npm/package-json>`__ for
   more information about ``package.json``.

.. _snip-publish:

Publish a Snippet
-----------------

To share your snippet, you must publish you snippet package to a
registry. The package will contain:

- Your code
- ``README.md``
- ``LICENSE`` file
- :ref:`package.json <snip-prep-package.json>`

When the files are complete, follow these steps to create and publish
your snippet package. 

#. Create a registry index file. The registry index contains metadata
   for the snippet packages in your registry. 
   
   Run `make-index.js
   <https://github.com/mongodb-labs/mongosh-snippets/blob/main/scripts/make-index.js>`__
   from the ``mongo-snippets`` directory create the index.

   .. code-block:: shell

      node ./scripts/make-index.js

   For further details about ``make-index.js``, see:
   :ref:`<snip-make-a-registry-index>`. Using ``make-index.js`` is the
   preferred way to create a registry index, but you can also
   :ref:`create a registry index manually <snip-manual-reg-index>`.
#. Commit your snippet and the registry index file to your GitHub
   repository.
#. Publish your changes to your npm registry. 

   .. code-block:: shell

      npm publish --access public

Install the New Snippet Package
-------------------------------

Follow these steps to install your new snippet package:

#. Refresh the snippet metadata in your local :binary:`~bin.mongosh`.

   .. code-block:: shell 

      snippet refresh
 
#. Install the snippet.

   .. code-block:: shell 

      snippet install YOUR_NEW_SNIPPET

.. _snip-contribute-a-package:

Contribute a Snippet Package to the MongoDB Community
-----------------------------------------------------

If you have written a code :ref:`snippet <snip-overview>` that might be
useful for other MongoDB users, you are invited to contribute it to the
`community repository
<https://github.com/mongodb-labs/mongosh-snippets>`__ hosted on GitHub.

To submit a snippet to the shared MongoDB repository:

#. Read and complete the
   `MongoDB Contributor Agreement <https://www.mongodb.com/legal/contributor-agreement>`__.
#. Fork and clone the
   `snippet project repository <https://github.com/mongodb-labs/mongosh-snippets>`__
   from GitHub.
#. Add a new directory for your code under
   `snippets/ <https://github.com/mongodb-labs/mongosh-snippets/tree/main/snippets>`__.
   Give it a descriptive name.
#. Create your snippet package. Be sure it contains the following files: 

   - ``package.json``
   - ``index.js``
   - ``README.md``
   - ``LICENSE``

   You do not have to create a registry index file. If your snippet
   package is accepted, MongoDB will update the registry index file.
#. Commit your changes.
#. Open a pull request against the `snippet project repository
   <https://github.com/mongodb-labs/mongosh-snippets>`__.

MongoDB will review your pull request. If it is accepted, we will:

- Merge your code into our GitHub repository.
- Publish it to the npm registry.
- Add it to the snippet index.

.. _snip-make-a-registry-index:

Example: Using ``make-index.js``
--------------------------------

The registry index file must be compressed before it is uploaded for
use. `make-index.js
<https://github.com/mongodb-labs/mongosh-snippets/blob/main/scripts/make-index.js>`__
walks through your snippet source directories gathering the information
that is needed to create the registry index file. After it creates the
registry index file, the ``make-index.js`` script also compresses it. 

You can use `show-index.js
<https://github.com/mongodb-labs/mongosh-snippets/blob/main/scripts/show-index.js>`__
to view the compressed registry index file. 

The `make-index.js
<https://github.com/mongodb-labs/mongosh-snippets/blob/main/scripts/make-index.js>`__
script assumes a directory structure like this:

.. code-block:: shell
   :copyable: false

   mongo-snippets
   |
   ├── scripts
   │   ├── make-index.js
   │   └── show-index.js
   └── snippets
       ├── decrypt-cards
       │   ├── LICENSE-Community.txt
       │   ├── README.md
       │   ├── error-matchers.js
       │   ├── index.js
       │   └── package.json
       └── update-auth
           ├── LICENSE
           ├── README.md
           ├── index.js
           └── package.json

To index the files, use `node <https://nodejs.org/>`__ to run
``make-index.js`` from the ``mongo-snippets`` directory.

.. code-block:: shell

    node ./scripts/make-index.js

The output of this script is a
`brotli-compressed <https://github.com/google/brotli/>`__ registry
index file, ``index.bson.br``. 

Upload ``index.bson.br`` to your GitHub repository. Note the location
and add a URL to ``snippetIndexSourceURLs`` to reference the file.

